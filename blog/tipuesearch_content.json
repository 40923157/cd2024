{"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/mdecycu/cmsimde_site 網站: https://mde.tw/cmsimde_site/ 簡報: https://mde.tw/cmsimde_site/reveal 網誌: https://mde.tw/cmsimde_site/blog","tags":"misc","url":"./pages/about/"},{"title":"40923157協同產品設計實習2b-16","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 操作期末報告內容 操作平台錄 程式跑平台控制","tags":"w16，第四組，40923157","url":"./40923157-2b-w16.html"},{"title":"40923157協同產品設計實習2b-14","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 準備使用Coppeliasim進行小組線上連線作動","tags":"w14，第四組，40923157","url":"./40923157-2b-w14.html"},{"title":"40923157協同產品設計實習2b-15","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 組合期末組件 組合組件安插轉接頭 如何呼叫出球，轉接頭，排序順序。","tags":"w15，第四組，40923157","url":"./40923157-2b-w15.html"},{"title":"40923157協同產品設計實習2b-13","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 操作影片 協同產品設計實習評分項目第一個影片操作的步驟","tags":"w13，第四組，40923157","url":"./40923157-2b-w13.html"},{"title":"40923157協同產品設計實習2b-12","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 12W任務 零件3影片 組合件 12週心得: 繪製零件時我的不像其他製圖軟件麼的好用，分別會製了五個零件雖然不是甚麼困難的零件，但是研究怎麼繪製也花了不少的時間，特別在組裝的時候遇到的問題最多。 任務3","tags":"w12，第四組，40923157","url":"./40923157-2b-w12.html"},{"title":"40923157協同產品設計實習2b-11","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 這禮拜上傳心得到 https://github.com/mdecd2024/2bstud-2bsite 裡面","tags":"w11，第四組，40923157","url":"./40923157-2b-w11.html"},{"title":"40923157協同產品設計實習2b-10","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w10 期中考後第一周 鋼球平衡台 PID 控制與模擬摘要內容","tags":"w10，第四組，40923157","url":"./40923157-2b-w10.html"},{"title":"40923157協同產品設計實習2b-9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w9 期中考周","tags":"w9，第四組，40923157","url":"./40923157-2b-w9.html"},{"title":"40923157協同產品設計實習2b-8","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 說明在期中之前做了哪些事情的影片介紹","tags":"w8，第四組，40923157","url":"./40923157-2b-w8.html"},{"title":"40923157協同產品設計實習2b-7","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. Update main.yml, 加入取下子模組內容的 scripts 觀看老師的影片一部部操做，更新了在分組網站下自己的子模組內容","tags":"w7，第四組，40923157","url":"./40923157-2b-w7.html"},{"title":"40923157協同產品設計實習2b-6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w6 加入 LateX 檔案所需目錄 使用小黑窗進行了兩次推送，把miktex-portable拉入虛擬Y槽，而後在rplit進行推送，分別推入了個人網站，再來是小組網站，讓一個團隊能夠點選就能看到LateX 檔案所需目錄的資料進行下載。 @echo off set Disk=y subst %Disk%: \"data\" %Disk%: set HomePath=%Disk%:\\home_ipv6 set HomeDrive=%Disk%:\\home_ipv6 set Home=%Disk%:\\home_ipv6 set USERPROFILE=%Disk%:\\home_ipv6 REM 將系統 Python 程式的 io 設為 utf-8 set PYTHONIOENCODING=\"utf-8\" set PYTHONPATH=%Disk%:\\Python312\\DLLs;%Disk%:\\Python312\\Lib;%Disk%:\\Python312\\Lib\\site-packages; set PYTHONHOME=%Disk%:\\Python312 REM for putty set GIT_SSH=%Disk%:\\putty\\plink.exe REM 設定跟 Python 有關的命令搜尋路徑 set path_python=%Disk%:\\Python312;%Disk%:\\Python312\\Scripts; REM 設定跟Git 有關的命令搜尋路徑 set path_git=%Disk%:\\portablegit\\bin; REM 設定 msys2 64 位元的執行路徑 set path_msys2=%Disk%:\\msys64_20210419\\mingw64\\bin; set path_lua=%Disk%:\\lua-5.3.5\\; set path_cmake=%Disk%:\\cmake-3.21.0-windows-x86_64\\bin; set path_tcc=%Disk%:\\tcc; set path_gnuplot=%Disk%:\\gnuplot\\bin; REM for execute scite directly set path_scite=%Disk%:\\wscite; set path_miktex=%Disk%:\\miktex-portable\\texmfs\\install\\miktex\\bin\\x64; REM for fasm set path_fasm=%Disk%:\\flat_asm; REM Xcopy %Disk%:\\home_ipv6\\AppData\\Roaming\\Coppeliasim C:\\users\\%USERNAME%\\AppData\\Roaming\\Coppeliasim /E /H /C /I /Y path=%Disk%:;%path_python%;%path_msys2%;%path_cmake%;%path_lua%;%path_git%;%path_tcc%;%path_gnuplot%;%path_scite%;%path_miktex%;%path_fasm%;%path%; start /MIN cmd.exe start /MIN cmd.exe start /MIN cmd.exe start /MIN cmd.exe start /MIN %Disk%:\\wscite\\SciTE.exe start /MIN %Disk%:\\wscite\\SciTE.exe REM start %Disk%:\\miktex-portable\\texmfs\\install\\miktex\\bin\\x64\\miktex-console.exe --hide --mkmaps Exit","tags":"w6，第四組，40923157","url":"./40923157-2b-w6.html"},{"title":"40923157協同產品設計實習2b-5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第五周網誌 教學影片分組整理並自評","tags":"w5，第四組，40923157","url":"./40923157-2b-w5.html"},{"title":"40923157協同產品設計實習2b-4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 建立個人最短網址網站 Github Pages服務可以讓 Github 帳號的擁有者, 使用\"帳號.github.io\"作為倉儲名稱, Github 會自動將此網站設定 Github Pages, 假如此倉儲內部帶有超文件, 則此倉儲對應的網址將會是 https://帳號.github.io 說明如何下載 replit_main2.7z 並在倉儲中建立 下載【replit】(https://mde.tw/wcm2024/downloads/static.txt) (https://mde.tw/wcm2024/downloads/main2.txt) 其中包含main2.py與ststic.py，只要在shll執行python3 main2.py就可以執行倉儲內的靜態網站顯示，另一方面諾要取消先前的python3 main2.py，只需要在shll頁面按下shift + c c代表cancle也就是取消，諾要執行動態網站，可以在shll執行python3 main.py，或者使用replit的Run按健 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. ## 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w4，第四組，40923157","url":"./40923157-2b-w4.html"},{"title":"40923157協同產品設計實習2b-3","text":"第三周使用Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. 列出期中分組倉儲與網站 cd2024 期中分組倉儲與網站 上列連結使用 Brython 程式語法, 可直接在網頁中列出特定連結內容, 所採用的程式碼如下: 從 Brython browser 模組導入 document 與 html from browser import document, html get output html location brython_div = document[\"brython_div1\"] div = \"a\" org = \"mdecd2024\" midterm = \"mid\" + div + \"g\" group_num = 8 for i in range(1,group_num+1): site_url = \"https://\" + org + \".github.io/2\" + div + \"-\" + midterm + str(i) repo_url = \"https://github.com/\" + org + \"/2\" + div + \"-\" + midterm + str(i) brython_div <= html.A(\"2\"+div+\"-\"+midterm+str(i), href=site_url) brython_div <= \" (\" brython_div <= html.A(\"repo\", href=repo_url) brython_div <= \")\" brython_div <= html.BR() brython_div <= html.BR() div = \"b\" midterm = \"mid\" + div + \"g\" group_num = 9 for i in range(1,group_num+1): site_url = \"https://\" + org + \".github.io/2\" + div + \"-\" + midterm + str(i) repo_url = \"https://github.com/\" + org + \"/2\" + div + \"-\" + midterm + str(i) brython_div <= html.A(\"2\"+div+\"-\"+midterm+str(i), href=site_url) brython_div <= \" (\" brython_div <= html.A(\"repo\", href=repo_url) brython_div <= \")\" brython_div <= html.BR() 期中協同分組報告 請參考 https://github.com/mdecd2024/test-ag1 中的 latex 目錄與 downloads 目錄中的 https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt 並根據下列教學範例: 說明如何將組員的個人倉儲納入分組倉儲成為子模組 說明如何在 Replit 維護分組倉儲 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 有關 Codespaces 使用 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. 使用 Gitpod 維護倉儲與網站 Gitpod 與 Codespaces 類似, 也是採用 Visual Studio Code 網際介面, 可讓使用者維護位於 Github 的倉儲, 只是個人的 cd2024 倉儲, 以 Github 帳號登入 Gitpod 之後, 可以直接維護, 但是分組網站是從 Github Classroom mdecd2024 帳號下派任, 與 Replit 環境維護分組網站的方法相同, 必須自行建立 .ssh 下的 id_rsa 與 config, 差別是一旦在 Gitpod 導入的分組網站 SSH 管理權限, 不會像 Replit 免費帳號下, 系統會定期刪除免費帳號使用者的 .ssh 目錄. 在 Gitpod 導入 Github 倉儲後, 路徑位於 /workspace/ 目錄下, 但是 .ssh 目錄則位於 /home/gitpod/.ssh, 當使用者執行 cd 則會進入 /home/gitpod 目錄, 且使用者在 Gitpod 的 Dashboard 可以從 https://gitpod.io 進入. 電腦教室中的協同設計 cd2024 起, 電腦輔助設計室中的每一台電腦已經各自擁有一個外部 IPv4 網址, 因此各組員可將個人倉儲與分組倉儲 git clone 至隨身碟, 利用 Token 或 SSH session 授權維護倉儲與網站內容. 如何利用 Classic Token 授權維護倉儲與網站 ODOO 參考資料 https://www.google.com/search?q=sap+vs+odoo (與 SAP 及 ODOO 有關的搜尋) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 將組員的個人倉儲設為分組倉儲子模組 cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站, 設定的指令為: git submodule add 組員的個人倉儲網址 組員的學號 例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行: git submodule add https://github.com/scrum-1/cd2024.git 41123299 如此, Github 帳號為 scrum-1 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 這樣設定的好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲. 另外一個使用 Github Classroom 派送分組倉儲的好處, 是 mdecycu 自動成為各分組倉儲的管理者之一, 若各組在改版或解決衝突的過程發生問題, mdecycu 可以協助處理. 一旦分組倉儲帶有以各組員學號作為子模組之後, git clone 倉儲必須使用: git clone --recurse-submodules 加上各組的倉儲 URL 以第一組期中分組倉儲的 git clone 為例, 並且使用 putty session 名稱 github.com: git clone --recurse-submodules git@github.com:mdecd2024/2b-midbg1.git 而且若要在分組倉儲中更新各組員的子模組版本, 則必須更換目錄到該組員的學號目錄中並且使用 git pull origin main, 才能取下該組員其 cd2024 個人倉儲的最新內容. 取下組員資料後, 若要新增提交推送, 則必須再更換目錄回分組倉儲後才能執行. 有關 LaTeX 轉 pdf 使用 Github Actions 執行轉檔: https://github.com/mdecd2024/test-ag1/blob/main/.github/workflows/main.yml 倉儲中的 latex 目錄: https://github.com/mdecd2024/test-ag1/tree/main/latex 說明如何利用 LaTeX 編寫分組期中報告 利用可攜程式編譯 LaTeX 下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 下載 latex_images_github.7z (需要密碼) 協同產品設計實習分組期中報告 LaTeX 範本: 下載 cd2024_midterm_report_latex_ex.7z 設定網誌 利用 [OBS] 加上廣播系統錄製的: 如何設定個人倉儲中的 Pelican 網誌 Odoo PLM 功能 簡介 Odoo PLM 用法 設定個人網誌系統 利用 https://github.com/mdecycu/cmsimde_site 建立的網站, 其動態網站資料位於 config/content.htm, 轉換完成的靜態網站資料位於 content 目錄中. 網誌的原始檔案位於 markdown 目錄, 所使用的網誌系統為 Pelican, 轉換完成的網誌內容則位於 blog 目錄. 將 markdown 網誌轉為網誌的指令為: pelican markdown -o blog -s local_publishconf.py 表示使用了 local_publishconfig.py 設定, 其餘與 blog 有關的設定檔案還有: pelicanconf.py 與 publishconf.py 等. 為了順利完成上述個人課程網站的網誌設定, 必須根據各用戶所使用的 github 帳號對這三個 .py 檔案進行設定. OnShape 帳號 若網路順暢, 可以登入 https://onshape.com 利用 MKCad Library 或 VEX Part Library 零件程式庫建立產品系統模型. CoppeliaSim CoppeliaSim 4.5.1 rev1 for IPv6.7z (169MB, password required to download) 可以結合可攜程式環境: portable_2024.7z (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB) 進行機電系統設計與模擬. 模型簡化 為了讓機電產品能在 CoppeliaSim 動態場景中順暢模擬, 各零組件必須有效進行簡化, 此一零件簡化過程如何後續對零組件進行應力或其他動態系統分析之前, 必須先簡化零組件外型後再進行網格化的應用相同.","tags":"w3，第四組，40923157","url":"./40923157-w3.html"},{"title":"40923157協同產品設計實習2b-2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第二週, 主要利用 Github Classroom 進行分組, 並且說明如何利用 Github Codespaces 維護個人與分組網站. 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 根據上述規劃, 乙班第一分組的期中協同倉儲將位於: https://github.com/mdecd2024/2b-midbg1, 第一組的期中報告網站將位於: https://mdecd2024.github.io/2b-midbg1. 至於乙班第一分組的期末協同倉儲將位於: https://github.com/mdecd2024/2b2-finalbg1, 且對應的期末報告網站將位於: https://mdecd2024.github.io/2b2-finalbg1. 利用 Codespaces 維護倉儲與網站 說明如何利用 Github Codespaces 維護網站內容","tags":"w2，第四組，40923157","url":"./40923157-w2.html"},{"title":"40923157協同產品設計實習2b-1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第一周，建個人課程倉儲，介紹 OnShape、Coppeliasim 與 Odoo PLM 在機械設計流程中的應用 2b 建個人課程倉儲 登入 github.com, 連結到 (https://github.com/mdecycu/cmsimde_site), 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. (https://github.com/mdecycu/cmsimde_site) 與 (https://github.com/mdecycu/cmsite) 的差別為, 目前的 Template 將 cmsimde 當作目錄, 而非 cmsite 中的子模組. 上述建立個人課程 cd2024 倉儲與網站的操作影片, 建立的範例網站為: (https://scrum-1.github.io/cd2024/) 將個人倉儲 import 至 Replit 從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github. 設定 Replit 與 Github 應用授權的說明影片 設定 Github 帳號的雙重認證 說明如何設定 Github 雙重認證, 其中手機必須先安裝 Github Mobile, 也可以使用 Authy App 作為認證套件, 一旦在 Github 帳號下的 Setting 中的 Password and authentication 啟用雙重認證, 最後必須下載對應的 Recovery codes 並存入隨身碟, 而且要寄到個人的電子郵箱. 如何 import 倉儲至 Replit 進行改版 說明如何利用 Replit 對 cd2024 改版","tags":"w1，第四組，40923157","url":"./40923157-w1.html"}]}